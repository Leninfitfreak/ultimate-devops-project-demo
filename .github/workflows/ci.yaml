name: Product Catalog CI-CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

env:
  DOCKER_IMAGE: your-dockerhub-username/product-catalog
  PRODUCT_CATALOG_PORT: 8088
  SERVICE_PATH: src/product-catalog
  K8S_DEPLOY_FILE: kubernetes/productcatalog/deploy.yaml

jobs:
  # ---------------------
  # 1. Unit Tests
  # ---------------------
  unit-tests:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: "1.24.x"
          check-latest: true

      - name: Check Go Version
        run: go version

      - name: Ensure go.sum
        working-directory: ${{ env.SERVICE_PATH }}
        run: go mod tidy

      - name: Cache Go Modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install Dependencies
        working-directory: ${{ env.SERVICE_PATH }}
        run: go get -u -t ./...

      - name: Run Unit Tests
        working-directory: ${{ env.SERVICE_PATH }}
        run: go test ./... -v

  # ---------------------
  # 2. Code Quality
  # ---------------------
  code-quality:
    runs-on: ubuntu-latest
    needs: [unit-tests]
    if: always()
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: "1.24.x"
          check-latest: true

      - name: Check Go Version
        run: go version

      - name: Install Staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Run Staticcheck
        working-directory: ${{ env.SERVICE_PATH }}
        run: staticcheck ./...

  # ---------------------
  # 3. Vulnerability Scan
  # ---------------------
  vulnerability-scan:
    runs-on: ubuntu-latest
    needs: [code-quality]
    if: always()
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: "1.24.x"
          check-latest: true

      - name: Check Go Version
        run: go version

      - name: Install GoSec
        run: go install github.com/securego/gosec/v2/cmd/gosec@latest

      - name: Run GoSec Security Scan
        working-directory: ${{ env.SERVICE_PATH }}
        run: gosec ./...

  # ---------------------
  # 4. Build Binary
  # ---------------------
  build-binary:
    runs-on: ubuntu-latest
    needs: [vulnerability-scan]
    if: always()
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: "1.24.x"
          check-latest: true

      - name: Chec
