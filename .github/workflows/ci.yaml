name: Product Catalog CI-CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

env:
  DOCKER_IMAGE: your-dockerhub-username/product-catalog
  PRODUCT_CATALOG_PORT: 8088
  SERVICE_PATH: src/product-catalog
  K8S_DEPLOY_FILE: kubernetes/productcatalog/deploy.yaml

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.23.x"
      - name: Install Dependencies
        working-directory: ${{ env.SERVICE_PATH }}
        run: |
          go mod tidy
          go get -u -t ./...
      - name: Run Unit Tests
        working-directory: ${{ env.SERVICE_PATH }}
        run: go test ./... -v

  code-quality:
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.23.x"
      - name: Install Staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest
      - name: Run Staticcheck
        working-directory: ${{ env.SERVICE_PATH }}
        run: staticcheck ./...

  vulnerability-scan:
    runs-on: ubuntu-latest
    needs: code-quality
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.23.x"
      - name: Install GoSec
        run: go install github.com/securego/gosec/v2/cmd/gosec@latest
      - name: Run GoSec Security Scan
        working-directory: ${{ env.SERVICE_PATH }}
        run: gosec ./...

  build-binary:
    runs-on: ubuntu-latest
    needs: vulnerability-scan
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.23.x"
      - name: Build Binary
        working-directory: ${{ env.SERVICE_PATH }}
        run: |
          export PRODUCT_CATALOG_PORT=${{ env.PRODUCT_CATALOG_PORT }}
          go build -o product-catalog .
      - uses: actions/upload-artifact@v4
        with:
          name: product-catalog-binary
          path: ${{ env.SERVICE_PATH }}/product-catalog

  docker-build-push:
    runs-on: ubuntu-latest
    needs: build-binary
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: product-catalog-binary
          path: ${{ env.SERVICE_PATH }}
      - name: Get Build Version
        id: vars
        run: |
          VERSION=build-${GITHUB_RUN_NUMBER}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and Tag Docker Image
        working-directory: ${{ env.SERVICE_PATH }}
        run: |
          docker build -t ${{ env.DOCKER_IMAGE }}:${{ steps.vars.outputs.version }} .
          docker tag ${{ env.DOCKER_IMAGE }}:${{ steps.vars.outputs.version }} ${{ env.DOCKER_IMAGE }}:latest
      - name: Push Docker Image
        run: |
          docker push ${{ env.DOCKER_IMAGE }}:${{ steps.vars.outputs.version }}
          docker push ${{ env.DOCKER_IMAGE }}:latest
      - uses: actions/upload-artifact@v4
        with:
          name: build-version
          path: $GITHUB_ENV

  update-k8s:
    runs-on: ubuntu-latest
    needs: docker-build-push
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v4
        with:
          name: build-version
          path: .
      - name: Load Build Version
        run: |
          source ./GITHUB_ENV
          echo "Using VERSION=$VERSION"
      - name: Update Kubernetes Manifest
        run: |
          sed -i "s|image: .*|image: ${{ env.DOCKER_IMAGE }}:${VERSION}|" ${{ env.K8S_DEPLOY_FILE }}
          echo "Updated image in ${{ env.K8S_DEPLOY_FILE }} to ${{ env.DOCKER_IMAGE }}:${VERSION}"
      - name: Commit and Push Updated Manifest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "lenin"
          git config user.email "leninfitfreak@gmail.com"
          git add ${{ env.K8S_DEPLOY_FILE }}
          git commit -m "Update image tag to ${VERSION} [CI SKIP]" || echo "No changes to commit"
          git push origin main


